<!--
    **************************************************************************************

    Toolkit for WPF

    Copyright (C) 2007-2019 Xceed Software Inc.

    This program is provided to you under the terms of the Microsoft Public
    License (Ms-PL) as published at https://github.com/xceedsoftware/wpftoolkit/blob/master/license.md

    For more features, controls, and fast professional support,
    pick up the Plus Edition at https://xceed.com/xceed-toolkit-plus-for-wpf/

    Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids

    ************************************************************************************
-->
<local:DemoView
    x:Class="Xceed.Wpf.Toolkit.LiveExplorer.Samples.Numeric.Views.NumericView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit.LiveExplorer"
    xmlns:numeric="clr-namespace:Xceed.Wpf.Toolkit.LiveExplorer.Samples.Numeric.Views"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    x:Name="_demo"
    Title="Numeric">
    <local:DemoView.Description>
        <Paragraph FontFamily="Segoe" FontSize="14">
            <Run>Numeric up-down controls provide a TextBox with button spinners that allow incrementing and decrementing numeric values by using the spinner buttons, keyboard up/down arrows, or mouse wheel.</Run>
            <LineBreak />
            <LineBreak />
            <Run>The following controls are available to support various native numeric types:</Run>
            <LineBreak />
            <Run>ByteUpDown, ShortUpDown, IntegerUpDown, LongUpDown, SingleUpDown, DoubleUpDown, DecimalUpDown, CalculatorUpDown.</Run>
            <LineBreak />
            <LineBreak />
            <Run>All these numeric types support the following properties.</Run>
        </Paragraph>
    </local:DemoView.Description>

    <local:DemoView.Resources>
        <x:Array x:Key="FormatStringComboBox" Type="numeric:FormatObject">
            <numeric:FormatObject DisplayValue="Currency" Value="C2" />
            <numeric:FormatObject DisplayValue="Fixed Point" Value="F2" />
            <numeric:FormatObject DisplayValue="General" Value="G" />
            <numeric:FormatObject DisplayValue="Number" Value="N" />
            <numeric:FormatObject DisplayValue="Percent" Value="P2" />
            <numeric:FormatObject DisplayValue="Degrees" Value="{}{0:N2} °" />
        </x:Array>

        <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />

        <DataTemplate x:Key="FormatStringItemTemplate">
            <TextBlock Text="{Binding DisplayValue}" />
        </DataTemplate>

        <ObjectDataProvider
            x:Key="AllowInputSpecialValuesComboBox"
            MethodName="GetValues"
            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="xctk:AllowedSpecialValues" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider
            x:Key="ButtonSpinnerLocationComboBox"
            MethodName="GetValues"
            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="xctk:Location" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider
            x:Key="ParsingNumberStyleComboBox"
            MethodName="GetValues"
            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="sys:Globalization.NumberStyles" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style x:Key="ControlInError" TargetType="Control">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <sys:String x:Key="allowInputSpecialValuesTooltip">Infinity and -Infinity input will not be accepted if Maximum and/or Minimum values does not allow them.</sys:String>
        <sys:String x:Key="parsingNumberStyleTooltip">HexNumber is not a valid choice when used with a DoubleUpDown (current control used in this sample). It will work with the following controls: IntegerUpDown, ByteUpDown, LongUpDown, and ShortUpDown.</sys:String>
    </local:DemoView.Resources>

    <StackPanel>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <GroupBox
                Grid.Row="0"
                Margin="5"
                Header="Numeric Features">
                <Grid Margin="5" HorizontalAlignment="Left">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="95" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="125" />
                    </Grid.ColumnDefinitions>

                    <!--  1st column  -->
                    <TextBlock
                        Grid.Row="0"
                        VerticalAlignment="Center"
                        Text="Mouse Wheel:" />
                    <ComboBox
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="5"
                        VerticalAlignment="Center"
                        SelectedItem="{Binding MouseWheelActiveTrigger, ElementName=_doubleUpDown}">
                        <x:StaticExtension Member="xctk:MouseWheelActiveTrigger.Focused" />
                        <x:StaticExtension Member="xctk:MouseWheelActiveTrigger.FocusedMouseOver" />
                        <x:StaticExtension Member="xctk:MouseWheelActiveTrigger.MouseOver" />
                        <x:StaticExtension Member="xctk:MouseWheelActiveTrigger.Disabled" />
                    </ComboBox>

                    <TextBlock
                        Grid.Row="1"
                        VerticalAlignment="Center"
                        Text="Show Button Spinner:" />
                    <CheckBox
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="5"
                        VerticalAlignment="Center"
                        ClickMode="Press"
                        IsChecked="{Binding ShowButtonSpinner, ElementName=_doubleUpDown}" />

                    <TextBlock
                        Grid.Row="2"
                        VerticalAlignment="Center"
                        Text="Is Read Only:"
                        ToolTip="Prevent from using button spinners or editing text." />
                    <CheckBox
                        Grid.Row="2"
                        Grid.Column="1"
                        Margin="5"
                        VerticalAlignment="Center"
                        ClickMode="Press"
                        IsChecked="{Binding IsReadOnly, ElementName=_doubleUpDown}" />

                    <TextBlock
                        Grid.Row="3"
                        VerticalAlignment="Center"
                        Text="Allow Spin:" />
                    <CheckBox
                        Grid.Row="3"
                        Grid.Column="1"
                        Margin="5"
                        VerticalAlignment="Center"
                        ClickMode="Press"
                        IsChecked="{Binding AllowSpin, ElementName=_doubleUpDown}"
                        IsEnabled="{Binding IsReadOnly, ElementName=_doubleUpDown, Converter={StaticResource InverseBoolConverter}}" />

                    <TextBlock
                        Grid.Row="4"
                        VerticalAlignment="Center"
                        Text="Allow TextInput:" />
                    <CheckBox
                        Grid.Row="4"
                        Grid.Column="1"
                        Margin="5"
                        VerticalAlignment="Center"
                        ClickMode="Press"
                        IsChecked="{Binding AllowTextInput, ElementName=_doubleUpDown}"
                        IsEnabled="{Binding IsReadOnly, ElementName=_doubleUpDown, Converter={StaticResource InverseBoolConverter}}" />

                    <TextBlock
                        Grid.Row="5"
                        VerticalAlignment="Center"
                        Text="Clip Value to Min Max:" />
                    <CheckBox
                        Grid.Row="5"
                        Grid.Column="1"
                        Margin="5"
                        VerticalAlignment="Center"
                        ClickMode="Press"
                        IsChecked="{Binding ClipValueToMinMax, ElementName=_doubleUpDown, Mode=TwoWay}" />

                    <TextBlock
                        Grid.Row="6"
                        VerticalAlignment="Center"
                        Text="DisplayDefaultValueOnEmptyText:" />
                    <CheckBox
                        Grid.Row="6"
                        Grid.Column="1"
                        Margin="5"
                        VerticalAlignment="Center"
                        ClickMode="Press"
                        IsChecked="{Binding DisplayDefaultValueOnEmptyText, ElementName=_doubleUpDown}" />

                    <!--  2nd column  -->
                    <TextBlock
                        Grid.Column="2"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="CultureInfo:" />
                    <ComboBox
                        Grid.Column="3"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        ItemsSource="{Binding Cultures, ElementName=_demo}"
                        SelectedValue="{Binding CultureInfo, ElementName=_doubleUpDown}" />

                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="2"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="FormatString:" />
                    <ComboBox
                        Grid.Row="1"
                        Grid.Column="3"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        IsEditable="True"
                        ItemTemplate="{StaticResource FormatStringItemTemplate}"
                        ItemsSource="{Binding Source={StaticResource FormatStringComboBox}}"
                        Style="{StaticResource ControlInError}"
                        Text="{Binding FormatString, ElementName=_doubleUpDown, ValidatesOnExceptions=True}"
                        TextSearch.TextPath="Value" />

                    <TextBlock
                        Grid.Row="2"
                        Grid.Column="2"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="Increment" />
                    <xctk:DoubleUpDown
                        Grid.Row="2"
                        Grid.Column="3"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AllowInputSpecialValues="None"
                        Minimum="0"
                        Value="{Binding Increment, ElementName=_doubleUpDown}" />

                    <TextBlock
                        Grid.Row="3"
                        Grid.Column="2"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="Minimum" />
                    <xctk:DoubleUpDown
                        Grid.Row="3"
                        Grid.Column="3"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AllowInputSpecialValues="NegativeInfinity"
                        Value="{Binding Minimum, ElementName=_doubleUpDown}" />

                    <TextBlock
                        Grid.Row="4"
                        Grid.Column="2"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="Maximum" />
                    <xctk:DoubleUpDown
                        Grid.Row="4"
                        Grid.Column="3"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AllowInputSpecialValues="PositiveInfinity"
                        Value="{Binding Maximum, ElementName=_doubleUpDown}" />

                    <TextBlock
                        Grid.Row="5"
                        Grid.Column="2"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="MaxLength" />
                    <xctk:IntegerUpDown
                        Grid.Row="5"
                        Grid.Column="3"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        MaxLength="10"
                        Minimum="0"
                        Value="{Binding MaxLength, ElementName=_doubleUpDown}" />

                    <!--  3rd column  -->
                    <TextBlock
                        Grid.Column="4"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="ButtonSpinnerLocation:" />
                    <ComboBox
                        Grid.Column="5"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        ItemsSource="{Binding Source={StaticResource ButtonSpinnerLocationComboBox}}"
                        SelectedValue="{Binding ButtonSpinnerLocation, ElementName=_doubleUpDown}" />

                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="4"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="ParsingNumberStyle:" />
                    <ComboBox
                        Grid.Row="1"
                        Grid.Column="5"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        ItemsSource="{Binding Source={StaticResource ParsingNumberStyleComboBox}}"
                        SelectedValue="{Binding ParsingNumberStyle, ElementName=_doubleUpDown}"
                        ToolTip="{StaticResource parsingNumberStyleTooltip}" />

                    <TextBlock
                        Grid.Row="2"
                        Grid.Column="4"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="Watermark:" />
                    <TextBox
                        Grid.Row="2"
                        Grid.Column="5"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        Text="{Binding Watermark, ElementName=_doubleUpDown}" />

                    <TextBlock
                        Grid.Row="3"
                        Grid.Column="4"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="Default Value:" />
                    <xctk:DoubleUpDown
                        Grid.Row="3"
                        Grid.Column="5"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AllowInputSpecialValues="Any"
                        Value="{Binding DefaultValue, ElementName=_doubleUpDown}" />

                    <TextBlock
                        Grid.Row="4"
                        Grid.Column="4"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="Value:" />
                    <xctk:DoubleUpDown
                        Grid.Row="4"
                        Grid.Column="5"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        AllowInputSpecialValues="Any"
                        Style="{StaticResource ControlInError}"
                        Value="{Binding Value, ElementName=_doubleUpDown, ValidatesOnExceptions=True}" />

                    <TextBlock
                        Grid.Row="5"
                        Grid.Column="4"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        Text="Text:" />
                    <TextBox
                        Grid.Row="5"
                        Grid.Column="5"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Text="{Binding Text, ElementName=_doubleUpDown}" />

                    <!--  last rows  -->
                    <TextBlock
                        Grid.Row="7"
                        Grid.ColumnSpan="6"
                        Margin="0,5,0,0"
                        VerticalAlignment="Center"
                        Text="(DoubleUpDown and SingleUpDown support the AllowInputSpecialValues property)" />
                    <TextBlock
                        Grid.Row="8"
                        Grid.ColumnSpan="2"
                        VerticalAlignment="Center"
                        Text="Allow Input Special Values:" />
                    <ComboBox
                        Grid.Row="8"
                        Grid.Column="2"
                        Grid.ColumnSpan="2"
                        Width="108"
                        Margin="5"
                        ItemsSource="{Binding Source={StaticResource AllowInputSpecialValuesComboBox}}"
                        SelectedValue="{Binding AllowInputSpecialValues, ElementName=_doubleUpDown}"
                        ToolTip="{StaticResource allowInputSpecialValuesTooltip}" />
                </Grid>
            </GroupBox>

            <StackPanel
                Grid.Row="1"
                Margin="10"
                HorizontalAlignment="Left"
                Orientation="Horizontal">
                <TextBlock Style="{StaticResource Header}" Text="DoubleUpDown Usage:" />
                <xctk:DoubleUpDown
                    x:Name="_doubleUpDown"
                    Width="250"
                    Margin="10"
                    AllowInputSpecialValues="Any"
                    AllowSpin="True"
                    AllowTextInput="True"
                    ButtonSpinnerLocation="Right"
                    ClipValueToMinMax="False"
                    CultureInfo="en-US"
                    DefaultValue="10"
                    DisplayDefaultValueOnEmptyText="False"
                    FormatString="C2"
                    Increment="0.5"
                    IsReadOnly="False"
                    MaxLength="0"
                    Maximum="100"
                    Minimum="0"
                    MouseWheelActiveOnFocus="True"
                    ParsingNumberStyle="Any"
                    ShowButtonSpinner="True"
                    Watermark="Enter Text"
                    Value="25" />
            </StackPanel>

            <TextBlock
                Grid.Row="2"
                Margin="10,15,0,0"
                Text="CalculatorUpDown is a DecimalUpDown with all the properties from a NumericUpDown. It provides a Calculator dropdown which allows you to perform mathematical calculations."
                TextWrapping="Wrap" />

            <GroupBox
                Grid.Row="3"
                Margin="5,15,0,0"
                Header="CalculatorUpDown Features">
                <StackPanel
                    Margin="5"
                    HorizontalAlignment="Left"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="Enter closes calculator:" />
                    <CheckBox
                        x:Name="_enterClosesCalculator"
                        Margin="5"
                        VerticalAlignment="Center"
                        IsChecked="{Binding EnterClosesCalculator, ElementName=_calculatorUpDown}" />
                    <TextBlock
                        Margin="70,0,0,0"
                        VerticalAlignment="Center"
                        Text="Precision(decimal places): " />
                    <xctk:IntegerUpDown
                        Width="75"
                        Margin="5"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Minimum="0"
                        ToolTip="Gets/Sets the maximum number of digits displayed to the right of the decimal point."
                        Value="{Binding Precision, ElementName=_calculatorUpDown}" />
                </StackPanel>
            </GroupBox>

            <StackPanel
                Grid.Row="4"
                Margin="10"
                HorizontalAlignment="Left"
                Orientation="Horizontal">
                <TextBlock Style="{StaticResource Header}" Text="CalculatorUpDown Usage:" />
                <xctk:CalculatorUpDown
                    x:Name="_calculatorUpDown"
                    Width="250"
                    Margin="10"
                    EnterClosesCalculator="False"
                    Precision="2"
                    Value="30" />
            </StackPanel>
        </Grid>
    </StackPanel>
</local:DemoView>